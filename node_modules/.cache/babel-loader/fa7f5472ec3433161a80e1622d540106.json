{"remainingRequest":"C:\\Users\\Owen Liu\\Desktop\\init\\HCI\\HCI\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Owen Liu\\Desktop\\init\\HCI\\HCI\\src\\api\\GrammarAPI.js","dependencies":[{"path":"C:\\Users\\Owen Liu\\Desktop\\init\\HCI\\HCI\\src\\api\\GrammarAPI.js","mtime":1639460331819},{"path":"C:\\Users\\Owen Liu\\Desktop\\init\\HCI\\HCI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Owen Liu\\Desktop\\init\\HCI\\HCI\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmV4cG9ydCB7IGdyYW1tYXJfYW5hbHlzZSB9Owp2YXIgYmFzZSA9ICcvZGVtby9hcGkvZ3JhbW1hci8nOwoKZnVuY3Rpb24gZ3JhbW1hcl9hbmFseXNlKHF1ZXN0aW9uLCBwaWQpIHsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgYXhpb3MuZ2V0KCIiLmNvbmNhdChiYXNlLCAiL2dyYW1tYXJfYW5hbHlzZT9xdWVzdGlvbj0iKS5jb25jYXQocXVlc3Rpb24sICImcGlkPSIpLmNvbmNhdChwaWQpKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgcmVzb2x2ZShyZXMuZGF0YSk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgcmVqZWN0KGVycm9yKTsKICAgIH0pOwogIH0pOwp9"},{"version":3,"sources":["C:/Users/Owen Liu/Desktop/init/HCI/HCI/src/api/GrammarAPI.js"],"names":["axios","grammar_analyse","base","question","pid","Promise","resolve","reject","get","then","res","data","catch","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,eAAT;AAEA,IAAIC,IAAI,GAAI,oBAAZ;;AAEA,SAASD,eAAT,CAAyBE,QAAzB,EAAmCC,GAAnC,EAAuC;AACnC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCP,IAAAA,KAAK,CAACQ,GAAN,WAAaN,IAAb,uCAA8CC,QAA9C,kBAA8DC,GAA9D,GACKK,IADL,CACU,UAAAC,GAAG,EAAI;AACTJ,MAAAA,OAAO,CAACI,GAAG,CAACC,IAAL,CAAP;AACH,KAHL,EAGOC,KAHP,CAGa,UAAAC,KAAK,EAAI;AACdN,MAAAA,MAAM,CAACM,KAAD,CAAN;AACP,KALD;AAMH,GAPM,CAAP;AAQH","sourcesContent":["import axios from \"axios\";\n\n\nexport { grammar_analyse }\n\nlet base =  '/demo/api/grammar/';\n\nfunction grammar_analyse(question, pid){\n    return new Promise((resolve, reject) => {\n        axios.get(`${base}/grammar_analyse?question=${question}&pid=${pid}`)\n            .then(res => {\n                resolve(res.data);\n            }).catch(error => {\n                reject(error);\n        })\n    })\n}\n"]}]}