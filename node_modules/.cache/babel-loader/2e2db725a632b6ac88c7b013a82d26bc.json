{"remainingRequest":"C:\\Users\\Zhaoning\\Desktop\\HCI\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Zhaoning\\Desktop\\HCI\\src\\components\\EditBar\\EditBar.js?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Zhaoning\\Desktop\\HCI\\src\\components\\EditBar\\EditBar.js","mtime":1639107668694},{"path":"C:\\Users\\Zhaoning\\Desktop\\HCI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Zhaoning\\Desktop\\HCI\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Zhaoning/Desktop/HCI/src/components/EditBar/EditBar.js"],"names":["mapState","mapMutations","inputKG","OpItem","EditBarBlock","MyButton","name","components","data","showEditBar","showExportOps","opInfo","entities_data","relations_data","max_log_len","search_node_text","search_node_condition","node_searched","search_node_log","search_edge_text","search_edge_condition","edge_searched","search_edge_log","filter_node_checkList","filter_edge_checkList","layout","layoutTypeNow","relation_label_enabled","font_size","node_radius","watch","cy","newValue","oldValue","get_statistic_data","options","statistic_data_change","console","log","newVal","oldVal","stop","nodes","elements","positions","node","nodeId","id","position","x","y","fit","d3_options","animate","fixedAfterDragging","linkId","d","linkDistance","manyBodyStrength","ready","tick","progress","randomize","infinite","run","edges","enabled","edge","hasClass","removeClass","addClass","setNodeFontSize","size","Number","isNaN","parseInt","style","informMsg","setNodeRadius","removeStyle","radius","realRadius","computed","state","workspace","nodeType","edgeType","layoutType","pid","node_checkList_disabled","get","filter_node_checked","edge_checkList_disabled","filter_edge_checked","methods","changeEditBarState","open","document","getElementsByClassName","click","getFilePath","selectedFile","files","reader","FileReader","readAsDataURL","that","onload","setJsonSrcPath","result","save","graphData","getDataJsonObject","getCleanData","loading","$loading","lock","text","spinner","background","then","res","success","setProject","$message","error","catch","err","finally","close","changeExportState","exportPng","blob","png","output","bg","full","scale","aLink","createElement","download","generateFileName","url","window","URL","createObjectURL","href","evt","createEvent","initEvent","dispatchEvent","revokeObjectURL","length","eles","JSON","parse","stringify","json","obj","undefined","forEach","val","push","type","relation","source","target","property","exportJson","filename","Blob","a","dataset","downloadurl","join","e","initMouseEvent","current_project","project_name","Date","getTime","EData","individual","organization","thing","default","total","RData","connection","inheritance","nodeFilter","checkList","hit","includes","edgeFilter","nodeDefilter","edgeDefilter"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,YAAnB,QAAuC,MAAvC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AAGA,eAAe;AACXC,EAAAA,IAAI,EAAE,SADK;AAEXC,EAAAA,UAAU,EAAE;AAACJ,IAAAA,MAAM,EAANA,MAAD;AAAQC,IAAAA,YAAY,EAAZA,YAAR;AAAsBC,IAAAA,QAAQ,EAARA;AAAtB,GAFD;AAGXG,EAAAA,IAHW,kBAGL;AACF,WAAM;AACFC,MAAAA,WAAW,EAAE,IADX;AAEFC,MAAAA,aAAa,EAAE,KAFb;AAGFC,MAAAA,MAAM,EAAE,6BAHN;AAIFC,MAAAA,aAAa,EAAE,EAJb;AAKFC,MAAAA,cAAc,EAAE,EALd;AAOF;AACAC,MAAAA,WAAW,EAAE,EARX;AAUFC,MAAAA,gBAAgB,EAAE,EAVhB;AAWFC,MAAAA,qBAAqB,EAAE,EAXrB;AAYFC,MAAAA,aAAa,EAAE,KAZb;AAaFC,MAAAA,eAAe,EAAE,EAbf;AAeFC,MAAAA,gBAAgB,EAAC,EAff;AAgBFC,MAAAA,qBAAqB,EAAE,EAhBrB;AAiBFC,MAAAA,aAAa,EAAC,KAjBZ;AAkBFC,MAAAA,eAAe,EAAE,EAlBf;AAoBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEAC,MAAAA,qBAAqB,EAAE,EA3CrB;AA4CFC,MAAAA,qBAAqB,EAAE,EA5CrB;AA8CF;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEAC,MAAAA,MAAM,EAAE,IAxDN;AA0DFC,MAAAA,aAAa,EAAG,EA1Dd;AA4DFC,MAAAA,sBAAsB,EAAE,IA5DtB;AA6DFC,MAAAA,SAAS,EAAE,EA7DT;AA8DFC,MAAAA,WAAW,EAAE;AA9DX,KAAN;AAgEH,GApEU;AAqEXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,EADG,cACAC,QADA,EACUC,QADV,EACmB;AAClB,WAAKC,kBAAL;AACA,WAAKR,aAAL,GAAqBM,QAAQ,CAACG,OAAT,GAAmBV,MAAnB,CAA0BnB,IAA/C;AACH,KAJE;AAKH8B,IAAAA,qBALG,iCAKmBJ,QALnB,EAK6BC,QAL7B,EAKsC;AACrCI,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,WAAKJ,kBAAL;AACH,KARE;AAUH;AACAR,IAAAA,aAXG,yBAWWa,MAXX,EAWmBC,MAXnB,EAW2B;AAC1BH,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCE,MAAhC,EAAuC,QAAvC,EAAgDD,MAAhD,EAAuD,GAAvD;AACA,UAAId,MAAM,GAAG,KAAKA,MAAlB;;AACA,UAAGA,MAAM,KAAG,IAAZ,EAAiB;AACbA,QAAAA,MAAM,CAACgB,IAAP;AACH;;AACD,UAAGF,MAAM,KAAG,QAAZ,EAAqB;AACjB;AACA,YAAIG,KAAK,GAAG,KAAKC,QAAL,CAAcD,KAA1B;;AACA,YAAIE,SAAS,GAAG,SAAZA,SAAY,CAAAC,IAAI,EAAE;AAClB,cAAIC,MAAM,GAAGD,IAAI,CAACrC,IAAL,CAAU,IAAV,CAAb;;AADkB,qDAEFkC,KAFE;AAAA;;AAAA;AAElB,gEAAsB;AAAA,kBAAdG,KAAc;;AAClB,kBAAGA,KAAI,CAACrC,IAAL,CAAUuC,EAAV,KAAeD,MAAlB,EAAyB;AACrB,uBAAOD,KAAI,CAACG,QAAZ;AACH;AACJ;AANiB;AAAA;AAAA;AAAA;AAAA;;AAOlB,iBAAO;AAACC,YAAAA,CAAC,EAAC,CAAH;AAAKC,YAAAA,CAAC,EAAC;AAAP,WAAP,CAPkB,CAOD;AACpB,SARD;;AASAzB,QAAAA,MAAM,GAAG,KAAKM,EAAL,CAAQN,MAAR,CAAe;AAACnB,UAAAA,IAAI,EAAEiC,MAAP;AAAcY,UAAAA,GAAG,EAAC,IAAlB;AAAuBP,UAAAA,SAAS,EAACA;AAAjC,SAAf,CAAT,CAZiB,CAYoD;AACrE;AAEH,OAfD,MAeM,IAAGL,MAAM,KAAG,UAAZ,EAAuB;AACzB,YAAIa,UAAU,GAAG;AACb9C,UAAAA,IAAI,EAAE,UADO;AAEb+C,UAAAA,OAAO,EAAE,IAFI;AAGbF,UAAAA,GAAG,EAAE,IAHQ;AAGH;AACVG,UAAAA,kBAAkB,EAAE,KAJP;AAKbC,UAAAA,MAAM,EAAE,SAASR,EAAT,CAAYS,CAAZ,EAAe;AACnB,mBAAOA,CAAC,CAACT,EAAT;AACH,WAPY;AAQbU,UAAAA,YAAY,EAAE,IARD;AASbC,UAAAA,gBAAgB,EAAE,CAAC,KATN;AAUbC,UAAAA,KAAK,EAAE,iBAAU,CAAE,CAVN;AAWblB,UAAAA,IAAI,EAAE,gBAAU,CAAE,CAXL;AAYbmB,UAAAA,IAAI,EAAE,cAASC,QAAT,EAAmB,CACrB;AACH,WAdY;AAebC,UAAAA,SAAS,EAAE,KAfE;AAgBbC,UAAAA,QAAQ,EAAE;AAhBG,SAAjB;AAkBAtC,QAAAA,MAAM,GAAG,KAAKM,EAAL,CAAQN,MAAR,CAAe2B,UAAf,CAAT;AACH,OApBK,MAoBD;AACD3B,QAAAA,MAAM,GAAG,KAAKM,EAAL,CAAQN,MAAR,CAAe;AAACnB,UAAAA,IAAI,EAAEiC,MAAP;AAAeY,UAAAA,GAAG,EAAE;AAApB,SAAf,CAAT;AACH;;AACD,WAAK1B,MAAL,GAAcA,MAAd;AACA,WAAKA,MAAL,CAAYuC,GAAZ;AACH,KAzDE;AA0DHrC,IAAAA,sBA1DG,kCA0DoBY,MA1DpB,EA0D4BC,MA1D5B,EA0DoC;AACnC,UAAIyB,KAAK,GAAG,KAAKlC,EAAL,CAAQkC,KAAR,EAAZ;AACA,UAAIC,OAAO,GAAG3B,MAAd;;AAFmC,kDAGlB0B,KAHkB;AAAA;;AAAA;AAGnC,+DAAwB;AAAA,cAAfE,IAAe;;AACpB,cAAGD,OAAO,IAAEC,IAAI,CAACC,QAAL,CAAc,cAAd,CAAZ,EAA0C;AACtCD,YAAAA,IAAI,CAACE,WAAL,CAAiB,cAAjB;AACH,WAFD,MAEM,IAAG,CAACH,OAAD,IAAU,CAACC,IAAI,CAACC,QAAL,CAAc,cAAd,CAAd,EAA4C;AAC9CD,YAAAA,IAAI,CAACG,QAAL,CAAc,cAAd;AACH;AACJ;AATkC;AAAA;AAAA;AAAA;AAAA;AAUtC,KApEE;AAqEH1C,IAAAA,SArEG,qBAqEOW,MArEP,EAqEeC,MArEf,EAqEuB;AACtB;AACA,UAAID,MAAM,KAAK,EAAf,EAAmB;AACf,aAAKgC,eAAL,CAAqB,EAArB,EADe,CACU;AACzB;AACA;AACA;;AACA;AACH;;AACD,UAAIC,IAAI,GAAGC,MAAM,CAAClC,MAAD,CAAjB;;AACA,UAAI,CAACmC,KAAK,CAACF,IAAD,CAAV,EAAkB;AACd,aAAKD,eAAL,CAAqBhC,MAArB,EADc,CACe;;AAC7BiC,QAAAA,IAAI,GAAGG,QAAQ,CAACH,IAAD,CAAf;;AAFc,oDAGG,KAAKzC,EAAL,CAAQW,KAAR,EAHH;AAAA;;AAAA;AAGd,iEAAkC;AAAA,gBAAzBG,IAAyB;AAC9BA,YAAAA,IAAI,CAAC+B,KAAL,CAAW,WAAX,EAAwBJ,IAAI,GAAG,IAA/B;AACH;AALa;AAAA;AAAA;AAAA;AAAA;AAMjB,OAND,MAOK;AACD,YAAIjC,MAAM,KAAK,EAAf,EAAmB;AACf,eAAKsC,SAAL,CAAe,OAAf,EAAuB,OAAvB;AACH;;AACD,aAAKN,eAAL,CAAqB,EAArB,EAJC,CAIwB;AACzB;AACA;AACA;AACH;AACJ,KA/FE;AAgGH1C,IAAAA,WAhGG,uBAgGSU,MAhGT,EAgGiBC,MAhGjB,EAgGyB;AACxB,UAAID,MAAM,KAAK,EAAf,EAAmB;AACf,aAAKuC,aAAL,CAAmB,EAAnB,EADe,CACQ;;AADR,oDAEE,KAAK/C,EAAL,CAAQW,KAAR,EAFF;AAAA;;AAAA;AAEf,iEAAkC;AAAA,gBAAzBG,IAAyB;AAC9BA,YAAAA,IAAI,CAACkC,WAAL,CAAiB,OAAjB;AACAlC,YAAAA,IAAI,CAACkC,WAAL,CAAiB,QAAjB;AACH;AALc;AAAA;AAAA;AAAA;AAAA;;AAMf;AACH;;AACD,UAAIC,MAAM,GAAGP,MAAM,CAAClC,MAAD,CAAnB;;AACA,UAAI,CAACmC,KAAK,CAACM,MAAD,CAAV,EAAoB;AAChBA,QAAAA,MAAM,GAAGL,QAAQ,CAACK,MAAD,CAAjB;AACA,YAAIC,UAAU,GAAGD,MAAM,GAAG,CAA1B;AACA,aAAKF,aAAL,CAAmBG,UAAU,GAAC,EAA9B,EAHgB,CAGkB;;AAHlB,oDAIC,KAAKlD,EAAL,CAAQW,KAAR,EAJD;AAAA;;AAAA;AAIhB,iEAAkC;AAAA,gBAAzBG,MAAyB;;AAAC;AAC/BA,YAAAA,MAAI,CAAC+B,KAAL,CAAW,OAAX,EAAoBK,UAAU,GAAG,IAAjC;;AACApC,YAAAA,MAAI,CAAC+B,KAAL,CAAW,QAAX,EAAqBK,UAAU,GAAG,IAAlC;AACH;AAPe;AAAA;AAAA;AAAA;AAAA;AAQnB,OARD,MASK;AACD,aAAKH,aAAL,CAAmB,EAAnB,EADC,CACsB;;AACvB,YAAIvC,MAAM,KAAK,EAAf,EAAmB;AACf,eAAKsC,SAAL,CAAe,OAAf,EAAuB,OAAvB;AACH;;AAJA,oDAKgB,KAAK9C,EAAL,CAAQW,KAAR,EALhB;AAAA;;AAAA;AAKD,iEAAkC;AAAA,gBAAzBG,MAAyB;;AAC9BA,YAAAA,MAAI,CAACkC,WAAL,CAAiB,OAAjB;;AACAlC,YAAAA,MAAI,CAACkC,WAAL,CAAiB,QAAjB;AACH;AARA;AAAA;AAAA;AAAA;AAAA;AASJ;AACJ;AA7HE,GArEI;AAoMXG,EAAAA,QAAQ,kCACDlF,QAAQ,CAAC;AACR+B,IAAAA,EAAE,EAAE,YAAAoD,KAAK;AAAA,aAAIA,KAAK,CAACC,SAAN,CAAgBrD,EAApB;AAAA,KADD;AAERK,IAAAA,qBAAqB,EAAE,+BAAA+C,KAAK;AAAA,aAAIA,KAAK,CAACC,SAAN,CAAgBhD,qBAApB;AAAA,KAFpB;AAGRiD,IAAAA,QAAQ,EAAE,kBAAAF,KAAK;AAAA,aAAIA,KAAK,CAACC,SAAN,CAAgBC,QAApB;AAAA,KAHP;AAIRC,IAAAA,QAAQ,EAAE,kBAAAH,KAAK;AAAA,aAAIA,KAAK,CAACC,SAAN,CAAgBE,QAApB;AAAA,KAJP;AAKRC,IAAAA,UAAU,EAAE,oBAAAJ,KAAK;AAAA,aAAIA,KAAK,CAACC,SAAN,CAAgBG,UAApB;AAAA,KALT;AAMR5C,IAAAA,QAAQ,EAAE,kBAAAwC,KAAK;AAAA,aAAIA,KAAK,CAACC,SAAN,CAAgBzC,QAApB;AAAA,KANP;AAOR6C,IAAAA,GAAG,EAAE,aAAAL,KAAK;AAAA,aAAIA,KAAK,CAACK,GAAV;AAAA;AAPF,GAAD,CADP;AAUJC,IAAAA,uBAAuB,EAAE;AACrBC,MAAAA,GADqB,iBACf;AACF,eAAO,CAAC,KAAKC,mBAAb;AACH;AAHoB,KAVrB;AAeJC,IAAAA,uBAAuB,EAAE;AACrBF,MAAAA,GADqB,iBACf;AACF,eAAO,CAAC,KAAKG,mBAAb;AACH;AAHoB;AAfrB,IApMG;AA0NXC,EAAAA,OAAO,kCACA7F,YAAY,CAAC,CAAC,gBAAD,EAAmB,0BAAnB,EACZ,wBADY,EACa,eADb,EAC6B,iBAD7B,EACgD,YADhD,EAC8D,mBAD9D,CAAD,CADZ;AAIH8F,IAAAA,kBAJG,gCAIiB;AAChB,WAAKtF,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACH,KANE;AAQHuF,IAAAA,IARG,kBAQG;AACFC,MAAAA,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,EAA+C,CAA/C,EAAkDC,KAAlD;AACH,KAVE;AAYHC,IAAAA,WAZG,yBAYU;AACT;AACA,UAAIC,YAAY,GAAGJ,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,EAA+C,CAA/C,EAAkDI,KAAlD,CAAwD,CAAxD,CAAnB;AACA,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb,CAHS,CAGqB;;AAC9BD,MAAAA,MAAM,CAACE,aAAP,CAAqBJ,YAArB;AACAE,MAAAA,MAAM,CAACG,IAAP,GAAc,IAAd;;AACAH,MAAAA,MAAM,CAACI,MAAP,GAAgB,YAAY;AACxB;AACA,aAAKD,IAAL,CAAUE,cAAV,CAAyB,KAAKC,MAA9B;AACH,OAHD;AAIH,KAtBE;AAwBHC,IAAAA,IAxBG,kBAwBG;AAAA;;AACF,UAAItG,IAAI,GAAG,EAAX;AACA,UAAIuG,SAAS,GAAG,KAAKC,iBAAL,EAAhB;AACAxG,MAAAA,IAAI,GAAG;AACHkC,QAAAA,KAAK,EAAEqE,SAAS,CAACrE,KADd;AAEHuB,QAAAA,KAAK,EAAE8C,SAAS,CAAC9C;AAFd,OAAP;AAKAzD,MAAAA,IAAI,GAAG,KAAKyG,YAAL,CAAkBzG,IAAlB,CAAP;AACA6B,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB9B,IAAtB;AAEA,UAAM0G,OAAO,GAAG,KAAKC,QAAL,CAAc;AAC1BC,QAAAA,IAAI,EAAE,IADoB;AAE1BC,QAAAA,IAAI,EAAE,WAFoB;AAG1BC,QAAAA,OAAO,EAAE,iBAHiB;AAI1BC,QAAAA,UAAU,EAAE;AAJc,OAAd,CAAhB;AAMArH,MAAAA,OAAO,iCAAKM,IAAL;AAAWgF,QAAAA,GAAG,EAAE,KAAKA;AAArB,SAAP,CAAkCgC,IAAlC,CAAuC,UAAAC,GAAG,EAAI;AAC1C,YAAGA,GAAG,CAACC,OAAP,EAAe;AACX,UAAA,KAAI,CAACC,UAAL,CAAgBnH,IAAhB;;AACA,UAAA,KAAI,CAACoH,QAAL,CAAcF,OAAd,CAAsB,MAAtB;AACH,SAHD,MAGK;AACD,UAAA,KAAI,CAACE,QAAL,CAAcC,KAAd,CAAqB,MAArB;AACH;AACJ,OAPD,EAOGC,KAPH,CAOU,UAAAC,GAAG,EAAI;AACb1F,QAAAA,OAAO,CAACC,GAAR,CAAYyF,GAAZ;;AACA,QAAA,KAAI,CAACH,QAAL,CAAcC,KAAd,CAAoB,YAApB;AACH,OAVD,EAUGG,OAVH,CAUW,YAAM;AACbd,QAAAA,OAAO,CAACe,KAAR;AACH,OAZD;AAaH,KAtDE;AAwDHC,IAAAA,iBAxDG,+BAwDgB;AACf,WAAKxH,aAAL,GAAqB,CAAC,KAAKA,aAA3B;AACH,KA1DE;;AA4DH;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQyH,IAAAA,SAtEG,uBAsEQ;AAAA;;AACP,WAAKP,QAAL,CAAcF,OAAd,CAAsB,WAAtB;AACA,UAAIU,IAAI,GAAG,KAAKrG,EAAL,CAAQsG,GAAR,CAAY;AACnBC,QAAAA,MAAM,EAAE,cADW;AACKC,QAAAA,EAAE,EAAE,OADT;AAEnBC,QAAAA,IAAI,EAAE,IAFa;AAEPC,QAAAA,KAAK,EAAE;AAFA,OAAZ,CAAX;AAIAL,MAAAA,IAAI,CAACZ,IAAL,CAAU,UAAAC,GAAG,EAAI;AACb;AACA,YAAIiB,KAAK,GAAGzC,QAAQ,CAAC0C,aAAT,CAAuB,GAAvB,CAAZ;AACAD,QAAAA,KAAK,CAACE,QAAN,GAAiB,MAAI,CAACC,gBAAL,KAA0B,MAA3C;AACA,YAAIC,GAAG,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BxB,GAA3B,CAAV;AACAiB,QAAAA,KAAK,CAACQ,IAAN,GAAaJ,GAAb,CALa,CAOb;;AACA,YAAIK,GAAG,GAAGlD,QAAQ,CAACmD,WAAT,CAAqB,aAArB,CAAV;AACAD,QAAAA,GAAG,CAACE,SAAJ,CAAc,OAAd,EAAuB,IAAvB,EAA6B,IAA7B;AACAX,QAAAA,KAAK,CAACY,aAAN,CAAoBH,GAApB,EAVa,CAYb;;AACAJ,QAAAA,MAAM,CAACC,GAAP,CAAWO,eAAX,CAA2BT,GAA3B;AACH,OAdD,EAcGhB,KAdH,CAcS,UAAAC,GAAG,EAAI;AACZ1F,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+ByF,GAA/B;;AACA,YAAI,MAAI,CAAChG,EAAL,CAAQY,QAAR,GAAmB6G,MAAnB,KAA8B,CAAlC,EAAqC;AACjC,UAAA,MAAI,CAAC5B,QAAL,CAAcC,KAAd,CAAoB,kBAApB;AACH;AACJ,OAnBD;AAoBH,KAhGE;;AAkGH;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEQb,IAAAA,iBAhHG,+BAgHiB;AAChB,UAAIyC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAK7H,EAAL,CAAQ8H,IAAR,GAAelH,QAA9B,CAAX,CAAX,CADgB,CAC+C;;AAC/D,UAAImH,GAAG,GAAG;AAAC,iBAAS,EAAV;AAAc,iBAAS;AAAvB,OAAV;;AACA,UAAIJ,IAAI,CAACE,SAAL,CAAeH,IAAf,MAAyB,IAA7B,EAAmC;AAC/B,YAAIA,IAAI,CAACxF,KAAL,KAAe8F,SAAf,IAA4BN,IAAI,CAACxF,KAAL,CAAWuF,MAAX,GAAoB,CAApD,EAAuD;AACnDC,UAAAA,IAAI,CAACxF,KAAL,CAAW+F,OAAX,CAAmB,UAAAC,GAAG,EAAI;AACtBH,YAAAA,GAAG,CAAC7F,KAAJ,CAAUiG,IAAV,CAAe;AACX1J,cAAAA,IAAI,EAAEyJ,GAAG,CAACzJ;AADC,aAAf;AAGH,WAJD;AAKH;;AACD,YAAIiJ,IAAI,CAAC/G,KAAL,KAAeqH,SAAf,IAA4BN,IAAI,CAAC/G,KAAL,CAAW8G,MAAX,GAAoB,CAApD,EAAuD;AACnDC,UAAAA,IAAI,CAAC/G,KAAL,CAAWsH,OAAX,CAAmB,UAAAC,GAAG,EAAI;AACtBH,YAAAA,GAAG,CAACpH,KAAJ,CAAUwH,IAAV,CAAe;AACX1J,cAAAA,IAAI,EAAEyJ,GAAG,CAACzJ,IADC;AAEXwC,cAAAA,QAAQ,EAAEiH,GAAG,CAACjH;AAFH,aAAf;AAIH,WALD;AAMH;AACJ;;AACD,aAAO8G,GAAP;AACH,KArIE;AAsIH7C,IAAAA,YAtIG,wBAsIUwC,IAtIV,EAsIgB;AACf,UAAIK,GAAG,GAAG;AAAC,iBAAS,EAAV;AAAc,iBAAS;AAAvB,OAAV;;AACA,UAAIJ,IAAI,CAACE,SAAL,CAAeH,IAAf,MAAyB,IAA7B,EAAmC;AAC/B,YAAIA,IAAI,CAACxF,KAAL,KAAe8F,SAAf,IAA4BN,IAAI,CAACxF,KAAL,CAAWuF,MAAX,GAAoB,CAApD,EAAuD;AACnDC,UAAAA,IAAI,CAACxF,KAAL,CAAW+F,OAAX,CAAmB,UAAAC,GAAG,EAAI;AACtBH,YAAAA,GAAG,CAAC7F,KAAJ,CAAUiG,IAAV,CAAe;AACX1J,cAAAA,IAAI,EAAE;AACFuC,gBAAAA,EAAE,EAACkH,GAAG,CAACzJ,IAAJ,CAASuC,EADV;AAEFoH,gBAAAA,IAAI,EAACF,GAAG,CAACzJ,IAAJ,CAAS2J,IAFZ;AAGFC,gBAAAA,QAAQ,EAACH,GAAG,CAACzJ,IAAJ,CAAS4J,QAHhB;AAIFC,gBAAAA,MAAM,EAACJ,GAAG,CAACzJ,IAAJ,CAAS6J,MAJd;AAKFC,gBAAAA,MAAM,EAACL,GAAG,CAACzJ,IAAJ,CAAS8J;AALd;AADK,aAAf;AASH,WAVD;AAWH;;AACD,YAAIb,IAAI,CAAC/G,KAAL,KAAeqH,SAAf,IAA4BN,IAAI,CAAC/G,KAAL,CAAW8G,MAAX,GAAoB,CAApD,EAAuD;AACnDC,UAAAA,IAAI,CAAC/G,KAAL,CAAWsH,OAAX,CAAmB,UAAAC,GAAG,EAAI;AACtBH,YAAAA,GAAG,CAACpH,KAAJ,CAAUwH,IAAV,CAAe;AACX1J,cAAAA,IAAI,EAAE;AACFuC,gBAAAA,EAAE,EAACkH,GAAG,CAACzJ,IAAJ,CAASuC,EADV;AAEFoH,gBAAAA,IAAI,EAACF,GAAG,CAACzJ,IAAJ,CAAS2J,IAFZ;AAGF7J,gBAAAA,IAAI,EAAC2J,GAAG,CAACzJ,IAAJ,CAASF,IAHZ;AAIFiK,gBAAAA,QAAQ,EAACN,GAAG,CAACzJ,IAAJ,CAAS+J;AAJhB,eADK;AAOXvH,cAAAA,QAAQ,EAAEiH,GAAG,CAACjH;AAPH,aAAf;AASH,WAVD;AAWH;AACJ;;AACD,aAAO8G,GAAP;AACH,KArKE;AAsKHU,IAAAA,UAtKG,wBAsKS;AACR,WAAK5C,QAAL,CAAc,aAAd,EADQ,CAER;;AACA,UAAIpH,IAAI,GAAG,KAAKwG,iBAAL,EAAX;AACA,UAAIyD,QAAQ,GAAI,KAAK5B,gBAAL,KAA0B,OAA1C;;AACA,UAAG,QAAOrI,IAAP,MAAgB,QAAnB,EAA4B;AACxBA,QAAAA,IAAI,GAAGkJ,IAAI,CAACE,SAAL,CAAepJ,IAAf,EAAqBuJ,SAArB,EAAgC,CAAhC,CAAP;AACH,OAPO,CAQR;;;AACA,UAAI3B,IAAI,GAAG,IAAIsC,IAAJ,CAAS,CAAClK,IAAD,CAAT,EAAiB;AAAC2J,QAAAA,IAAI,EAAE;AAAP,OAAjB,CAAX;AAAA,UACIQ,CAAC,GAAG1E,QAAQ,CAAC0C,aAAT,CAAuB,GAAvB,CADR;AAEAgC,MAAAA,CAAC,CAAC/B,QAAF,GAAa6B,QAAb,CAXQ,CAaR;AACA;;AACA,UAAI3B,GAAG,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2Bb,IAA3B,CAAV;AACAuC,MAAAA,CAAC,CAACzB,IAAF,GAASJ,GAAT,CAhBQ,CAkBR;;AACA6B,MAAAA,CAAC,CAACC,OAAF,CAAUC,WAAV,GAAwB,CAAC,WAAD,EAAcF,CAAC,CAAC/B,QAAhB,EAA0B+B,CAAC,CAACzB,IAA5B,EAAkC4B,IAAlC,CAAuC,GAAvC,CAAxB,CAnBQ,CAqBR;;AACA,UAAIC,CAAC,GAAG9E,QAAQ,CAACmD,WAAT,CAAqB,aAArB,CAAR;AACA2B,MAAAA,CAAC,CAACC,cAAF,CAAiB,OAAjB,EAA0B,IAA1B,EAAgC,KAAhC,EAAuCjC,MAAvC,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,CAA3D,EAA8D,KAA9D,EAAqE,KAArE,EAA4E,KAA5E,EAAmF,KAAnF,EAA0F,CAA1F,EAA6F,IAA7F;AACA4B,MAAAA,CAAC,CAACrB,aAAF,CAAgByB,CAAhB,EAxBQ,CA0BR;;AACAhC,MAAAA,MAAM,CAACC,GAAP,CAAWO,eAAX,CAA2BT,GAA3B;AACH,KAlME;AAoMHD,IAAAA,gBApMG,8BAoMe;AACd,UAAIvI,IAAI,GAAG,EAAX;;AACA,UAAG;AACCA,QAAAA,IAAI,GAAG,KAAK2K,eAAL,CAAqBC,YAA5B;AACH,OAFD,CAEC,OAAOH,CAAP,EAAU;AACP1I,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAgByI,CAA5B;AACA1I,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAhC,QAAAA,IAAI,GAAG,IAAI6K,IAAJ,GAAWC,OAAX,EAAP;AACH;;AACD,aAAO9K,IAAP;AACH,KA9ME;;AAgNH;AACR;AACA;AACQ4B,IAAAA,kBAnNG,gCAmNiB;AAChB,UAAI1B,IAAI,GAAG,KAAKwG,iBAAL,EAAX;AACA,UAAItE,KAAK,GAAGlC,IAAI,CAACkC,KAAjB;AAAA,UACIuB,KAAK,GAAGzD,IAAI,CAACyD,KADjB;AAEA,UAAIoH,KAAK,GAAG;AACRC,QAAAA,UAAU,EAAE,CADJ;AAERC,QAAAA,YAAY,EAAE,CAFN;AAGRC,QAAAA,KAAK,EAAE,CAHC;AAIRC,QAAAA,OAAO,EAAE,CAJD;AAKRC,QAAAA,KAAK,EAAEhJ,KAAK,CAAC8G;AALL,OAAZ;;AAJgB,kDAWC9G,KAXD;AAAA;;AAAA;AAWhB,+DAAuB;AAAA,cAAdG,IAAc;;AACnB,cAAI,EAAEA,IAAI,CAACrC,IAAL,CAAU2J,IAAV,IAAkB,YAAlB,IAAkCtH,IAAI,CAACrC,IAAL,CAAU2J,IAAV,IAAkB,cAApD,IAAsEtH,IAAI,CAACrC,IAAL,CAAU2J,IAAV,IAAkB,OAA1F,CAAJ,EAAuG;AACnGkB,YAAAA,KAAK,CAAC,SAAD,CAAL;AACH,WAFD,MAEM;AACFA,YAAAA,KAAK,CAACxI,IAAI,CAACrC,IAAL,CAAU2J,IAAX,CAAL;AACH;AACJ;AAjBe;AAAA;AAAA;AAAA;AAAA;;AAkBhB,UAAIwB,KAAK,GAAG;AACRC,QAAAA,UAAU,EAAE,CADJ;AAERC,QAAAA,WAAW,EAAE,CAFL;AAGRJ,QAAAA,OAAO,EAAE,CAHD;AAIRC,QAAAA,KAAK,EAAEzH,KAAK,CAACuF;AAJL,OAAZ;;AAlBgB,kDAwBCvF,KAxBD;AAAA;;AAAA;AAwBhB,+DAAuB;AAAA,cAAdE,IAAc;AACnBwH,UAAAA,KAAK,CAACxH,IAAI,CAAC3D,IAAL,CAAU2J,IAAX,CAAL;AACH;AA1Be;AAAA;AAAA;AAAA;AAAA;;AA2BhB,WAAKvJ,aAAL,GAAqB,CAACyK,KAAD,CAArB;AACA,WAAKxK,cAAL,GAAsB,CAAC8K,KAAD,CAAtB;AACH,KAhPE;AAkPH;AACAG,IAAAA,UAnPG,wBAmPS;AACR,UAAIC,SAAS,GAAG,KAAKxK,qBAArB;AACA,WAAKQ,EAAL,CAAQW,KAAR,GAAgBsH,OAAhB,CAAwB,UAAAC,GAAG,EAAE;AACzB,YAAI+B,GAAG,GAAGD,SAAS,CAACE,QAAV,CAAmBhC,GAAG,CAACzJ,IAAJ,CAAS,MAAT,CAAnB,CAAV;;AACD,YAAGwL,GAAG,IAAE,CAAC/B,GAAG,CAAC7F,QAAJ,CAAa,SAAb,CAAT,EAAkC;AAC9B6F,UAAAA,GAAG,CAAC3F,QAAJ,CAAa,SAAb;AACH,SAFD,MAEM,IAAG,CAAC0H,GAAD,IAAM/B,GAAG,CAAC7F,QAAJ,CAAa,SAAb,CAAT,EAAiC;AACnC6F,UAAAA,GAAG,CAAC5F,WAAJ,CAAgB,SAAhB;AACH;AACH,OAPD;AAQH,KA7PE;AA8PH6H,IAAAA,UA9PG,wBA8PS;AACR,UAAIH,SAAS,GAAG,KAAKvK,qBAArB;AACA,WAAKO,EAAL,CAAQkC,KAAR,GAAgB+F,OAAhB,CAAwB,UAAAC,GAAG,EAAE;AACzB,YAAI+B,GAAG,GAAGD,SAAS,CAACE,QAAV,CAAmBhC,GAAG,CAACzJ,IAAJ,CAAS,MAAT,CAAnB,CAAV;;AACA,YAAGwL,GAAG,IAAE,CAAC/B,GAAG,CAAC7F,QAAJ,CAAa,QAAb,CAAT,EAAiC;AAC7B6F,UAAAA,GAAG,CAAC3F,QAAJ,CAAa,QAAb;AACH,SAFD,MAEM,IAAG,CAAC0H,GAAD,IAAM/B,GAAG,CAAC7F,QAAJ,CAAa,QAAb,CAAT,EAAgC;AAClC6F,UAAAA,GAAG,CAAC5F,WAAJ,CAAgB,QAAhB;AACH;AACJ,OAPD;AAQH,KAxQE;AAyQH8H,IAAAA,YAzQG,0BAyQW;AACV,UAAG,KAAK5K,qBAAL,CAA2BiI,MAA3B,KAAoC,CAAvC,EAAyC;AACzC,WAAKzH,EAAL,CAAQW,KAAR,GAAgBsH,OAAhB,CAAwB,UAAAC,GAAG,EAAE;AACzB,YAAGA,GAAG,CAAC7F,QAAJ,CAAa,SAAb,CAAH,EAA2B;AACvB6F,UAAAA,GAAG,CAAC5F,WAAJ,CAAgB,SAAhB;AACH;AACJ,OAJD;AAKA,WAAK9C,qBAAL,GAA6B,EAA7B;AACH,KAjRE;AAkRH6K,IAAAA,YAlRG,0BAkRW;AACV,UAAG,KAAK5K,qBAAL,CAA2BgI,MAA3B,KAAoC,CAAvC,EAAyC;AACzC,WAAKzH,EAAL,CAAQkC,KAAR,GAAgB+F,OAAhB,CAAwB,UAAAC,GAAG,EAAE;AACzB,YAAGA,GAAG,CAAC7F,QAAJ,CAAa,QAAb,CAAH,EAA0B;AACtB6F,UAAAA,GAAG,CAAC5F,WAAJ,CAAgB,QAAhB;AACH;AACJ,OAJD;AAKA,WAAK7C,qBAAL,GAA6B,EAA7B;AACH;AA1RE;AA1NI,CAAf","sourcesContent":["import { mapState, mapMutations } from 'vuex';\nimport { inputKG } from \"../../api/basicAPI\";\nimport OpItem from './OpItem';\nimport EditBarBlock from \"./EditBarBlock\";\nimport MyButton from \"@/components/Tools/MyButton\";\n\n\nexport default {\n    name: \"EditBar\",\n    components: {OpItem,EditBarBlock, MyButton},\n    data(){\n        return{\n            showEditBar: true,\n            showExportOps: false,\n            opInfo: '打开的文件后缀为\".json\"，其表示一个知识图谱\\n',\n            entities_data: [],\n            relations_data: [],\n\n            ////////////////////////////搜索相关/////////////////////////////////\n            max_log_len: 10,\n\n            search_node_text: [],\n            search_node_condition: [],\n            node_searched: false,\n            search_node_log: [],\n\n            search_edge_text:[],\n            search_edge_condition: [],\n            edge_searched:false,\n            search_edge_log: [],\n\n            // search_text: '',\n            // search_type: '',\n            // select_value: '',\n            // showEnabled: false,\n            // edgeDisabled: true,\n            // types: [\n            //     {\n            //         label: '节点',\n            //         value: '1'\n            //     },\n            //     {\n            //         label: '关系',\n            //         value: '2'\n            //     }\n            // ],\n            // currentSearch: {\n            //     params: {},\n            //     result: []\n            // },\n            // searchLog: [],\n\n            //////////////////////过滤相关/////////////////////////////\n\n            filter_node_checkList: [],\n            filter_edge_checkList: [],\n\n            // filter_disabled: true,\n            // filterShowEnabled: false,\n            //\n            // filter_node_checked: false,\n            // filter_node_checkList: [],\n            // filter_edge_checked: false,\n            // filter_edge_checkList: [],\n\n            //////////////////////展示效果相关////////////////////////////////\n\n            layout: null,\n\n            layoutTypeNow : '',\n\n            relation_label_enabled: true,\n            font_size: 20,\n            node_radius: 20,\n        }\n    },\n    watch: {\n        cy(newValue, oldValue){\n            this.get_statistic_data();\n            this.layoutTypeNow = newValue.options().layout.name;\n        },\n        statistic_data_change(newValue, oldValue){\n            console.log(\"检测到数据变化\")\n            this.get_statistic_data();\n        },\n\n        /////////////////////////////展示相关//////////////////////////////\n        layoutTypeNow(newVal, oldVal) {\n            console.log(\"layout watched: '\",oldVal,\"' to '\",newVal,\"'\");\n            let layout = this.layout;\n            if(layout!==null){\n                layout.stop();\n            }\n            if(newVal==='preset'){\n                //console.log(\"elements stored: \",this.elements);\n                let nodes = this.elements.nodes;\n                let positions = node=>{\n                    let nodeId = node.data(\"id\");\n                    for(let node of nodes){\n                        if(node.data.id===nodeId){\n                            return node.position;\n                        }\n                    }\n                    return {x:0,y:0};//可以拓展成随机放置\n                };\n                layout = this.cy.layout({name: newVal,fit:true,positions:positions});//若以后恢复的布局中新增颜色、大小等，可能需要为增加的部分渲染内容新写代码\n                //console.log(\"reset done\")\n\n            }else if(newVal==='d3-force'){\n                let d3_options = {\n                    name: 'd3-force',\n                    animate: true,\n                    fit: true,//适应viewport\n                    fixedAfterDragging: false,\n                    linkId: function id(d) {\n                        return d.id;\n                    },\n                    linkDistance: 1000,\n                    manyBodyStrength: -10000,\n                    ready: function(){},\n                    stop: function(){},\n                    tick: function(progress) {\n                        // console.log('progress - ', progress);\n                    },\n                    randomize: false,\n                    infinite: true\n                }\n                layout = this.cy.layout(d3_options)\n            }else{\n                layout = this.cy.layout({name: newVal, fit: true})\n            }\n            this.layout = layout;\n            this.layout.run();\n        },\n        relation_label_enabled(newVal, oldVal) {\n            let edges = this.cy.edges();\n            let enabled = newVal;\n            for (let edge of edges) {\n                if(enabled&&edge.hasClass('label_hidden')){\n                    edge.removeClass('label_hidden');\n                }else if(!enabled&&!edge.hasClass('label_hidden')){\n                    edge.addClass('label_hidden');\n                }\n            }\n        },\n        font_size(newVal, oldVal) {\n            // let defaultSize = '25px';//默认值，25px是看workspace找到的\n            if (newVal === '') {\n                this.setNodeFontSize('');//同步改变workspace中的nodeNodeFontSize\n                //CytoscapeKG中在监听到workspace中nodeFontSize刚变回''时\n                //会根据节点大小和字数重新渲染各个节点的字体大小，所以不能用统一默认值\n                //此处什么也不需要做，因为CytoscapeKG里做了\n                return;\n            }\n            let size = Number(newVal);\n            if (!isNaN(size)) {\n                this.setNodeFontSize(newVal);//同步改变workspace中的nodeNodeFontSize\n                size = parseInt(size);\n                for (let node of this.cy.nodes()) {\n                    node.style('font-size', size + 'px');\n                }\n            }\n            else {\n                if (newVal !== '') {\n                    this.informMsg('error','请输入数字');\n                }\n                this.setNodeFontSize('');//同步改变workspace中的nodeNodeFontSize\n                //CytoscapeKG中在监听到workspace中nodeFontSize刚变回''时\n                //会根据节点大小和字数重新渲染各个节点的字体大小，所以不能用统一默认值\n                //此处什么也不需要做，因为CytoscapeKG里做了\n            }\n        },\n        node_radius(newVal, oldVal) {\n            if (newVal === '') {\n                this.setNodeRadius('');//同步改变workspace中的nodeRadius\n                for (let node of this.cy.nodes()) {\n                    node.removeStyle('width');\n                    node.removeStyle('height');\n                }\n                return;\n            }\n            let radius = Number(newVal);\n            if (!isNaN(radius)) {\n                radius = parseInt(radius);\n                let realRadius = radius * 2;\n                this.setNodeRadius(realRadius+\"\");//同步改变workspace中的nodeRadius\n                for (let node of this.cy.nodes()) {//是不是要改成等比例扩大？\n                    node.style('width', realRadius + 'px');\n                    node.style('height', realRadius + 'px');\n                }\n            }\n            else {\n                this.setNodeRadius('');//同步改变workspace中的nodeRadius\n                if (newVal !== '') {\n                    this.informMsg('error','请输入数字');\n                }\n                for (let node of this.cy.nodes()) {\n                    node.removeStyle('width');\n                    node.removeStyle('height');\n                }\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            cy: state => state.workspace.cy,\n            statistic_data_change: state => state.workspace.statistic_data_change,\n            nodeType: state => state.workspace.nodeType,\n            edgeType: state => state.workspace.edgeType,\n            layoutType: state => state.workspace.layoutType,\n            elements: state => state.workspace.elements,\n            pid: state => state.pid,\n        }),\n        node_checkList_disabled: {\n            get() {\n                return !this.filter_node_checked;\n            }\n        },\n        edge_checkList_disabled: {\n            get() {\n                return !this.filter_edge_checked;\n            }\n\n        },\n    },\n    methods:{\n        ...mapMutations(['setJsonSrcPath', 'setSeCurrentSearchParams',\n            'setCurrentSearchResult','setNodeRadius','setNodeFontSize', 'setProject', 'changeShowQAPanel']),\n\n        changeEditBarState(){\n            this.showEditBar = !this.showEditBar;\n        },\n\n        open(){\n            document.getElementsByClassName(\"choose-file\")[0].click();\n        },\n\n        getFilePath(){\n            //获取读取我文件的File对象\n            let selectedFile = document.getElementsByClassName(\"choose-file\")[0].files[0];\n            let reader = new FileReader();//这是核心,读取操作就是由它完成.\n            reader.readAsDataURL(selectedFile)\n            reader.that = this;\n            reader.onload = function () {\n                //当读取完成后回调这个函数,然后此时文件的内容存储到了this.result中,直接操作即可\n                this.that.setJsonSrcPath(this.result);\n            }\n        },\n\n        save(){\n            let data = {};\n            let graphData = this.getDataJsonObject();\n            data = {\n                nodes: graphData.nodes,\n                edges: graphData.edges\n            };\n\n            data = this.getCleanData(data);\n            console.log(\"要保存的数据：\",data);\n\n            const loading = this.$loading({\n                lock: true,\n                text: '...保存中...',\n                spinner: 'el-icon-loading',\n                background: 'rgba(255, 255,255, 0.8)'\n            });\n            inputKG({...data, pid: this.pid}).then(res => {\n                if(res.success){\n                    this.setProject(data);\n                    this.$message.success('保存成功');\n                }else{\n                    this.$message.error( '保存失败')\n                }\n            }).catch( err => {\n                console.log(err);\n                this.$message.error('网络错误或服务器错误')\n            }).finally(() => {\n                loading.close();\n            })\n        },\n\n        changeExportState(){\n            this.showExportOps = !this.showExportOps;\n        },\n\n        /**\n         * 导出全局图片.\n         * options: The export options.\n         output： Whether the output should be 'base64uri' (default), 'base64', 'blob', or 'blob-promise' (a promise that resolves to the blob is returned).\n         bg: The background colour of the image (transparent by default).\n         full: Whether to export the current viewport view (false, default) or the entire graph (true).\n         scale: This value specifies a positive number that scales the size of the resultant image.\n         maxWidth: Specifies the scale automatically in combination with maxHeight such that the resultant image is no wider than maxWidth.\n         maxHeight: Specifies the scale automatically in combination with maxWidth such that the resultant image is no taller than maxHeight\n         */\n        exportPng(){\n            this.$message.success(\"正在导出图片...\");\n            let blob = this.cy.png({\n                output: 'blob-promise', bg: 'white',\n                full: true, scale: 4\n            });\n            blob.then(res => {\n                //创建下载链接\n                let aLink = document.createElement('a');\n                aLink.download = this.generateFileName() + '.png';\n                let url = window.URL.createObjectURL(res);\n                aLink.href = url;\n\n                //创建、分配并触发点击事件\n                let evt = document.createEvent(\"MouseEvents\");\n                evt.initEvent(\"click\", true, true);\n                aLink.dispatchEvent(evt);\n\n                // 释放掉blob对象\n                window.URL.revokeObjectURL(url);\n            }).catch(err => {\n                console.log(\"Error occured: \", err);\n                if (this.cy.elements().length === 0) {\n                    this.$message.error(\"知识图谱已经空啦，导不出东西的呀\");\n                }\n            });\n        },\n\n        /**\n         * 对象拷贝\n         * JSON.parse(JSON.stringify(obj))我们一般用来深拷贝\n         但不是完全深拷贝，有以下特点：\n         1、如果obj里面有时间对象，则JSON.stringify后再JSON.parse的结果，时间将只是字符串的形式。而不是时间对象；\n         2、如果obj里有RegExp、Error对象，则序列化的结果将只得到空对象；\n         3、如果obj里有函数，undefined，则序列化的结果会把函数或 undefined丢失；\n         4、如果obj里有NaN、Infinity和-Infinity，则序列化的结果会变成null\n         5、JSON.stringify()只能序列化对象的可枚举的自有属性，例如 如果obj中的对象是有构造函数生成的， 则使用JSON.parse(JSON.stringify(obj))深拷贝后，会丢弃对象的constructor；\n         6、如果对象中存在循环引用的情况也无法正确实现深拷贝；\n\n         注：由于前后端数据格式不统一，这里对数据格式做了转化。\n         日后前/后端有修改时这里都要改！\n         */\n        getDataJsonObject() {\n            let eles = JSON.parse(JSON.stringify(this.cy.json().elements));//其实深拷贝可能没啥意义，只是单纯直觉上想用一用(*╹▽╹*)\n            let obj = {\"edges\": [], \"nodes\": []};\n            if (JSON.stringify(eles) !== '{}') {\n                if (eles.edges !== undefined && eles.edges.length > 0) {\n                    eles.edges.forEach(val => {\n                        obj.edges.push({\n                            data: val.data\n                        });\n                    });\n                }\n                if (eles.nodes !== undefined && eles.nodes.length > 0) {\n                    eles.nodes.forEach(val => {\n                        obj.nodes.push({\n                            data: val.data,\n                            position: val.position\n                        });\n                    });\n                }\n            }\n            return obj;\n        },\n        getCleanData(eles) {\n            let obj = {\"edges\": [], \"nodes\": []};\n            if (JSON.stringify(eles) !== '{}') {\n                if (eles.edges !== undefined && eles.edges.length > 0) {\n                    eles.edges.forEach(val => {\n                        obj.edges.push({\n                            data: {\n                                id:val.data.id,\n                                type:val.data.type,\n                                relation:val.data.relation,\n                                source:val.data.source,\n                                target:val.data.target\n                            }\n                        });\n                    });\n                }\n                if (eles.nodes !== undefined && eles.nodes.length > 0) {\n                    eles.nodes.forEach(val => {\n                        obj.nodes.push({\n                            data: {\n                                id:val.data.id,\n                                type:val.data.type,\n                                name:val.data.name,\n                                property:val.data.property\n                            },\n                            position: val.position\n                        });\n                    });\n                }\n            }\n            return obj;\n        },\n        exportJson(){\n            this.$message(\"正在导出json...\");\n            //有空也可以改成promise式的\n            let data = this.getDataJsonObject();\n            let filename =  this.generateFileName() + '.json';\n            if(typeof data === 'object'){\n                data = JSON.stringify(data, undefined, 4)\n            }\n            // 要创建一个 blob 数据\n            let blob = new Blob([data], {type: 'text/json'}),\n                a = document.createElement('a');\n            a.download = filename;\n\n            // 将blob转换为地址\n            // 创建 URL 的 Blob 对象\n            let url = window.URL.createObjectURL(blob)\n            a.href = url;\n\n            // 标签 data- 嵌入自定义属性  屏蔽后也可正常下载\n            a.dataset.downloadurl = ['text/json', a.download, a.href].join(':');\n\n            // 添加鼠标事件并向一个指定的事件目标派发\n            let e = document.createEvent('MouseEvents');\n            e.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n            a.dispatchEvent(e);\n\n            // 释放掉blob对象\n            window.URL.revokeObjectURL(url);\n        },\n\n        generateFileName(){\n            let name = \"\";\n            try{\n                name = this.current_project.project_name;\n            }catch (e) {\n                console.log(\"Error occurs:\"+e);\n                console.log(\"可能未连接到Server\");\n                name = new Date().getTime();\n            }\n            return name;\n        },\n\n        /**\n         * 获取统计数据，即给 data 中的 entities_data 和 relaions_data 赋值\n         */\n        get_statistic_data(){\n            let data = this.getDataJsonObject();\n            let nodes = data.nodes,\n                edges = data.edges;\n            let EData = {\n                individual: 0,\n                organization: 0,\n                thing: 0,\n                default: 0,\n                total: nodes.length\n            };\n            for (let node of nodes){\n                if (!(node.data.type == 'individual' || node.data.type == 'organization' || node.data.type == 'thing')){\n                    EData['default'] ++;\n                }else {\n                    EData[node.data.type] ++;\n                }\n            }\n            let RData = {\n                connection: 0,\n                inheritance: 0,\n                default: 0,\n                total: edges.length\n            }\n            for (let edge of edges){\n                RData[edge.data.type] ++;\n            }\n            this.entities_data = [EData];\n            this.relations_data = [RData];\n        },\n\n        ///////////////////////////////////此处为过滤代码///////////////////////////////////////\n        nodeFilter(){\n            let checkList = this.filter_node_checkList;\n            this.cy.nodes().forEach(val=>{\n                let hit = checkList.includes(val.data('type'));\n               if(hit&&!val.hasClass('removed')) {\n                   val.addClass('removed');\n               }else if(!hit&&val.hasClass('removed')){\n                   val.removeClass('removed');\n               }\n            });\n        },\n        edgeFilter(){\n            let checkList = this.filter_edge_checkList;\n            this.cy.edges().forEach(val=>{\n                let hit = checkList.includes(val.data('type'));\n                if(hit&&!val.hasClass('hidden')) {\n                    val.addClass('hidden');\n                }else if(!hit&&val.hasClass('hidden')){\n                    val.removeClass('hidden');\n                }\n            });\n        },\n        nodeDefilter(){\n            if(this.filter_node_checkList.length===0)return;\n            this.cy.nodes().forEach(val=>{\n                if(val.hasClass('removed')){\n                    val.removeClass('removed');\n                }\n            });\n            this.filter_node_checkList = [];\n        },\n        edgeDefilter(){\n            if(this.filter_edge_checkList.length===0)return;\n            this.cy.edges().forEach(val=>{\n                if(val.hasClass('hidden')){\n                    val.removeClass('hidden');\n                }\n            });\n            this.filter_edge_checkList = [];\n        },\n    }\n}\n"]}]}